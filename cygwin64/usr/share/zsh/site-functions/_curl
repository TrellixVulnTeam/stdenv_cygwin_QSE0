#compdef curl

# curl zsh completion

local curcontext="$curcontext" state state_descr line
typeset -A opt_args

local rc=1

_arguments -C -S \
  {-y,--speed-time}'[Trigger '\''speed-limit'\'' abort after this time]':<seconds> \
  {-E,--cert}'[Client certificate file and password]':<certificate[:password]> \
  --proxy-negotiate'[HTTP Negotiate (SPNEGO) authentication on the proxy]':Use \
  {-c,--cookie-jar}'[Write cookies to <filename> after operation]':<filename> \
  --proxy-insecure'[HTTPS proxy connections without verifying the proxy]':Do \
  --proxy-ssl-allow-beast'[security flaw for interop for HTTPS proxy]':Allow \
  {-D,--dump-header}'[Write the received headers to <filename>]':<filename> \
  {-p,--proxytunnel}'[Operate through a HTTP proxy tunnel (using CONNECT)]' \
  --abstract-unix-socket'[Connect via abstract Unix domain socket]':<path> \
  --pinnedpubkey'[FILE/HASHES Public key to verify peer against]':<hashes> \
  --proxy-cacert'[CA certificate to verify peer against for proxy]':<file> \
  --proxy-pass'[Pass phrase for the private key for HTTPS proxy]':<phrase> \
  --socks5-hostname'[SOCKS5 proxy, pass host name to proxy]':<host[:port]> \
  --proto-default'[Use PROTOCOL for any URL missing a scheme]':<protocol> \
  {-R,--remote-time}'[Set the remote file'\''s time on the local output]' \
  --socks5-gssapi-service'[SOCKS5 proxy service name for GSS-API]':<name> \
  --ftp-alternative-to-user'[String to replace USER \[name\]]':<command> \
  --ftp-ssl-control'[SSL/TLS for FTP login, clear for transfer]':Require \
  --resolve'[Resolve the host+port to this address]':<host:port:address> \
  --libcurl'[Dump libcurl equivalent code of this command line]':<file> \
  --local-port'[Force use of RANGE for local port numbers]':<num/range> \
  --proxy-capath'[CA directory to verify peer against for proxy]':<dir> \
  --proxy-tlsauthtype'[TLS authentication type for HTTPS proxy]':<type> \
  {-O,--remote-name}'[Write output to a file named as the remote file]' \
  --retry-connrefused'[on connection refused (use with --retry)]':Retry \
  --suppress-connect-headers'[proxy CONNECT response headers]':Suppress \
  --crlfile'[Get a CRL list in PEM format from the given file]':<file> \
  {-g,--globoff}'[Disable URL sequences and ranges using {} and \[\]]' \
  {-j,--junk-session-cookies}'[session cookies read from file]':Ignore \
  {-k,--insecure}'[Allow insecure server connections when using SSL]' \
  --location-trusted'[--location, and send auth to other hosts]':Like \
  --cacert'[certificate> CA certificate to verify peer against]':<CA \
  --connect-timeout'[Maximum time allowed for connection]':<seconds> \
  --expect100-timeout'[How long to wait for 100-continue]':<seconds> \
  --proxy-cert-type'[Client certificate type for HTTS proxy]':<type> \
  --socks5-basic'[Enable username/password auth for SOCKS5 proxies]' \
  --dns-ipv4-addr'[IPv4 address to use for DNS requests]':<address> \
  --dns-ipv6-addr'[IPv6 address to use for DNS requests]':<address> \
  --ignore-content-length'[the size of the remote resource]':Ignore \
  {-i,--include}'[Include protocol response headers in the output]' \
  --mail-auth'[Originator address of the original email]':<address> \
  --noproxy'[List of hosts which do not use proxy]':<no-proxy-list> \
  --proto-redir'[Enable/disable PROTOCOLS on redirect]':<protocols> \
  --dns-interface'[Interface to use for DNS requests]':<interface> \
  --hostpubmd5'[Acceptable MD5 hash of the host public key]':<md5> \
  --keepalive-time'[Interval time for keepalive probes]':<seconds> \
  --proxy-cert'[Set client certificate for proxy]':<cert[:passwd]> \
  {-H,--header}'[Pass custom header(s) to server]':<header/@file> \
  {-m,--max-time}'[Maximum time allowed for the transfer]':<time> \
  --proxy-header'[Pass custom header(s) to proxy]':<header/@file> \
  --unix-socket'[Connect through this Unix domain socket]':<path> \
  {-T,--upload-file}'[Transfer local FILE to destination]':<file> \
  {-w,--write-out}'[Use output FORMAT after completion]':<format> \
  {-f,--fail}'[Fail silently (no output at all) on HTTP errors]' \
  --http2-prior-knowledge'[HTTP 2 without HTTP/1.1 Upgrade]':Use \
  --fail-early'[Fail on first transfer error, do not continue]' \
  {-J,--remote-header-name}'[the header-provided filename]':Use \
  --socks4a'[SOCKS4a proxy on given host + port]':<host[:port]> \
  {-Y,--speed-limit}'[Stop transfers slower than this]':<speed> \
  {-z,--time-cond}'[Transfer based on a time condition]':<time> \
  --cert-status'[Verify the status of the server certificate]' \
  {-:,--next}'[Make next URL use its separate set of options]' \
  --proxy-tlspassword'[TLS password for HTTPS proxy]':<string> \
  {-U,--proxy-user}'[Proxy user and password]':<user:password> \
  --proxy1.0'[Use HTTP/1.0 proxy on given port]':<host[:port]> \
  {-r,--range}'[Retrieve only the bytes within RANGE]':<range> \
  --trace-ascii'[Like --trace, but without hex output]':<file> \
  {-A,--user-agent}'[Send User-Agent <name> to server]':<name> \
  --create-dirs'[Create necessary local directory hierarchy]' \
  {-n,--netrc}'[Must read .netrc for user name and password]' \
  --preproxy'[Use this proxy first]':[protocol://]host[:port] \
  --retry-max-time'[Retry only within this period]':<seconds> \
  --sasl-ir'[Enable initial response in SASL authentication]' \
  --socks4'[SOCKS4 proxy on given host + port]':<host[:port]> \
  --socks5'[SOCKS5 proxy on given host + port]':<host[:port]> \
  --socks5-gssapi-nec'[with NEC SOCKS5 server]':Compatibility \
  --ssl-allow-beast'[security flaw to improve interop]':Allow \
  --ftp-create-dirs'[the remote dirs if not present]':Create \
  {-N,--no-buffer}'[Disable buffering of the output stream]' \
  --proxy-key-type'[Private key file type for proxy]':<type> \
  --remote-name-all'[the remote file name for all URLs]':Use \
  {-X,--request}'[Specify request command to use]':<command> \
  --retry'[Retry request if transient problems occur]':<num> \
  --ssl-no-revoke'[cert revocation checks (WinSSL)]':Disable \
  --cert-type'[Certificate file type (DER/PEM/ENG)]':<type> \
  --connect-to'[Connect to host]':<HOST1:PORT1:HOST2:PORT2> \
  --max-redirs'[Maximum number of redirects allowed]':<num> \
  --negotiate'[Use HTTP Negotiate (SPNEGO) authentication]' \
  --no-keepalive'[Disable TCP keepalive on the connection]' \
  {-#,--progress-bar}'[Display transfer progress as a bar]' \
  {-Q,--quote}'[Send command(s) to server before transfer]' \
  --random-file'[File for reading random data from]':<file> \
  --socks5-gssapi'[GSS-API auth for SOCKS5 proxies]':Enable \
  --interface'[Use network INTERFACE (or address)]':<name> \
  --key-type'[Private key file type (DER/PEM/ENG)]':<type> \
  --proxy-digest'[Use Digest authentication on the proxy]' \
  --proxy-service-name'[SPNEGO proxy service name]':<name> \
  --form-string'[Specify HTTP multipart POST data]':<name=string> \
  --max-filesize'[Maximum file size to download]':<bytes> \
  {-o,--output}'[Write to file instead of stdout]':<file> \
  --post301'[Do not switch to GET after following a 301]' \
  --post302'[Do not switch to GET after following a 302]' \
  --post303'[Do not switch to GET after following a 303]' \
  {-x,--proxy}'[Use this proxy]':[protocol://]host[:port] \
  --proxy-anyauth'[any proxy authentication method]':Pick \
  --request-target'[the target for this request]':Specify \
  --trace-time'[Add time stamps to trace/verbose output]' \
  {-u,--user}'[Server user and password]':<user:password> \
  {-C,--continue-at}'[Resumed transfer offset]':<offset> \
  --data-raw'[HTTP POST data, '\''@'\'' allowed]':<data> \
  {-G,--get}'[Put the post data in the URL and use GET]' \
  --krb'[Enable Kerberos with security <level>]':<level> \
  --ntlm-wb'[Use HTTP NTLM authentication with winbind]' \
  --path-as-is'[Do not squash .. sequences in URL path]' \
  --proxy-basic'[Use Basic authentication on the proxy]' \
  --proxy-ciphers'[SSL ciphers to use for proxy]':<list> \
  --proxy-tlsuser'[TLS username for HTTPS proxy]':<name> \
  {-a,--append}'[Append to target file when uploading]' \
  --capath'[CA directory to verify peer against]':<dir> \
  {-b,--cookie}'[Send cookies from string/file]':<data> \
  --data-urlencode'[HTTP POST data url encoded]':<data> \
  --delegation'[GSS-API delegation permission]':<LEVEL> \
  {-F,--form}'[Specify HTTP multipart POST data]':<name=content> \
  {-P,--ftp-port}'[Use PORT instead of PASV]':<address> \
  --metalink'[Process given URLs as metalink XML file]' \
  --tr-encoding'[Request compressed transfer encoding]' \
  --xattr'[Store metadata in extended file attributes]' \
  --dns-servers'[DNS server addrs to use]':<addresses> \
  --egd-file'[EGD socket path for random data]':<file> \
  --limit-rate'[Limit transfer speed to RATE]':<speed> \
  --proxy-ntlm'[Use NTLM authentication on the proxy]' \
  --retry-delay'[Wait time between retries]':<seconds> \
  {-S,--show-error}'[Show error even when -s is used]' \
  --ftp-ssl-ccc-mode'[Set CCC mode]':<active/passive> \
  {-v,--verbose}'[Make the operation more talkative]' \
  --ftp-skip-pasv-ip'[the IP address for PASV]':Skip \
  --pass'[Pass phrase for the private key]':<phrase> \
  --proxy-crlfile'[Set a CRL list for proxy]':<file> \
  --ciphers'[of ciphers> SSL ciphers to use]':<list \
  --login-options'[Server login options]':<options> \
  --netrc-file'[Specify FILE for netrc]':<filename> \
  --tftp-blksize'[Set TFTP BLKSIZE option]':<value> \
  --tftp-no-options'[not send any TFTP options]':Do \
  --no-sessionid'[Disable SSL session-ID reusing]' \
  --proxy-key'[Private key for HTTPS proxy]':<key> \
  {-K,--config}'[Read config from a file]':<file> \
  --mail-from'[Mail from this address]':<address> \
  --mail-rcpt'[Mail from this address]':<address> \
  --oauth2-bearer'[OAuth 2 Bearer Token]':<token> \
  --proto'[Enable/disable PROTOCOLS]':<protocols> \
  --tlsauthtype'[TLS authentication type]':<type> \
  --ftp-ssl-ccc'[Send CCC after authenticating]' \
  {-4,--ipv4}'[Resolve names to IPv4 addresses]' \
  {-6,--ipv6}'[Resolve names to IPv6 addresses]' \
  {-t,--telnet-option}'[Set telnet option]':<opt=val> \
  {-V,--version}'[Show version number and quit]' \
  --data-binary'[HTTP POST binary data]':<data> \
  --tls-max'[Use TLSv1.0 or greater]':<VERSION> \
  --trace'[Write a debug trace to FILE]':<file> \
  --disable-eprt'[Inhibit using EPRT or LPRT]' \
  --netrc-optional'[either .netrc or URL]':Use \
  --raw'[Do HTTP "raw"; no transfer decoding]' \
  --service-name'[SPNEGO service name]':<name> \
  --anyauth'[Pick any authentication method]' \
  --compressed'[Request compressed response]' \
  --data-ascii'[HTTP POST ASCII data]':<data> \
  --ftp-account'[Account data string]':<data> \
  --ftp-pasv'[Use PASV/EPSV instead of PORT]' \
  --no-alpn'[Disable the ALPN TLS extension]' \
  --tcp-nodelay'[Use the TCP_NODELAY option]' \
  {-B,--use-ascii}'[Use ASCII/text transfer]' \
  --digest'[Use HTTP Digest Authentication]' \
  --ftp-method'[Control CWD usage]':<method> \
  --proxy-tlsv1'[Use TLSv1 for HTTPS proxy]' \
  --pubkey'[SSH Public key file name]':<key> \
  --no-npn'[Disable the NPN TLS extension]' \
  --basic'[Use HTTP Basic Authentication]' \
  {-M,--manual}'[Display the full manual]' \
  --engine'[Crypto engine to use]':<name> \
  --false-start'[Enable TLS False Start]' \
  --crlf'[Convert LF to CRLF in upload]' \
  {-I,--head}'[Show document info only]' \
  --ntlm'[Use HTTP NTLM authentication]' \
  {-1,--tlsv1}'[Use TLSv1.0 or greater]' \
  {-d,--data}'[HTTP POST data]':<data> \
  --disable-epsv'[Inhibit using EPSV]' \
  --key'[Private key file name]':<key> \
  {-e,--referer}'[Referrer URL]':<URL> \
  --stderr'[Where to redirect stderr]' \
  --ftp-pret'[Send PRET before PASV]' \
  {-L,--location}'[Follow redirects]' \
  --tcp-fastopen'[Use TCP Fast Open]' \
  {-l,--list-only}'[List only mode]' \
  {-q,--disable}'[Disable .curlrc]' \
  --tlsuser'[TLS user name]':<name> \
  --url'[URL to work with]':<url> \
  {-0,--http1.0}'[Use HTTP 1.0]' \
  {-h,--help}'[This help text]' \
  --ssl-reqd'[Require SSL/TLS]' \
  --tlspassword'[TLS password]' \
  {-s,--silent}'[Silent mode]' \
  --http1.1'[Use HTTP 1.1]' \
  {-2,--sslv2}'[Use SSLv2]' \
  {-3,--sslv3}'[Use SSLv3]' \
  --tlsv1.0'[Use TLSv1.0]' \
  --tlsv1.1'[Use TLSv1.1]' \
  --tlsv1.2'[Use TLSv1.2]' \
  --tlsv1.3'[Use TLSv1.3]' \
  --http2'[Use HTTP 2]' \
  --ssl'[Try SSL/TLS]' \
  '*:URL:_urls' && rc=0

return rc
